# Generated by Django 4.2.3 on 2023-11-02 20:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0005_alter_customuser_organization"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "api_token",
                    models.CharField(default=uuid.uuid4, editable=False, max_length=36),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "    Dataset",
            },
        ),
        migrations.CreateModel(
            name="DatasetPatient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datasets.dataset",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DatasetTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="GlobalPatient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicID",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "    Public ID",
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "protocol_version",
                    models.CharField(choices=[("1.0.0", "1.0.0")], max_length=200),
                ),
                (
                    "first_name_token",
                    models.CharField(
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="First name",
                    ),
                ),
                (
                    "last_name_token",
                    models.CharField(
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Last name",
                    ),
                ),
                (
                    "date_of_birth_token",
                    models.CharField(
                        help_text="YYYY-MM-DD",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "middle_name_token",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Middle name",
                    ),
                ),
                (
                    "full_name_token",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Full name",
                    ),
                ),
                (
                    "first_name_soundex_token",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="First name soundex",
                    ),
                ),
                (
                    "last_name_soundex_token",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Last name soundex",
                    ),
                ),
                (
                    "gender_token",
                    models.CharField(
                        blank=True,
                        help_text="M or F",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Gender",
                    ),
                ),
                (
                    "city_at_birth_token",
                    models.CharField(
                        blank=True,
                        help_text="City name",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="City at birth",
                    ),
                ),
                (
                    "zip_code_at_birth_token",
                    models.CharField(
                        blank=True,
                        help_text="Zip code",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Zip code at birth",
                    ),
                ),
                (
                    "abbr_zip_code_at_birth_token",
                    models.CharField(
                        blank=True,
                        help_text="Abbreviated zip code",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Abbreviated zip code at birth",
                    ),
                ),
                (
                    "address_at_bith_token",
                    models.CharField(
                        blank=True,
                        help_text="Street address",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Address at birth",
                    ),
                ),
                (
                    "state_at_birth_token",
                    models.CharField(
                        blank=True,
                        help_text="ISO 3166-2",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="State at birth",
                    ),
                ),
                (
                    "country_at_birth_token",
                    models.CharField(
                        blank=True,
                        help_text="ISO 3166-1 alpha-3",
                        max_length=1024,
                        validators=[django.core.validators.MinLengthValidator(1024)],
                        verbose_name="Country at birth",
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datasets.dataset",
                    ),
                ),
                (
                    "dataset_patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datasets.datasetpatient",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="datasetpatient",
            name="global_patient",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datasets.globalpatient",
            ),
        ),
        migrations.AddField(
            model_name="datasetpatient",
            name="public_id",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datasets.publicid",
            ),
        ),
        migrations.AddField(
            model_name="dataset",
            name="tags",
            field=models.ManyToManyField(blank=True, to="datasets.datasettag"),
        ),
    ]
